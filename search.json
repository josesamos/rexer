[{"path":"https://josesamos.github.io/rexer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 rexer authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://josesamos.github.io/rexer/articles/rexer.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"rexer: Random Exercises and Exams Generator","text":"goal rexer facilitate generation exams incorporating random elements exercises. can considered generalization string exercises found exams package. Incorporating randomness within exercise enhances exam security, ensuring student compelled focus test rather attempting obtain answers peers. exercise row table. consists statement may gaps, many deemed necessary, vectors strings fill gaps selecting one . may also include figure whose name description can also gaps. Additionally, can indicate answer either form instructions vector strings associated vectors gaps. Documents can generated PDF, HTML, Word format. produces version conducting assessment version facilitates correction, linked code. rest document structured follows: First, general process defining exercises exams presented. Next, show generation exam instances, provide examinees support correction. Finally, document concludes conclusions.","code":""},{"path":"https://josesamos.github.io/rexer/articles/rexer.html","id":"exercises-and-exams-definition-process","dir":"Articles","previous_headings":"","what":"Exercises and exams definition process","title":"rexer: Random Exercises and Exams Generator","text":"define exam, Rmd file containing exam template required. Using template, instantiate exam object. Communication object template occurs parameters must included template. values parameters set within object using associated definition methods.","code":""},{"path":"https://josesamos.github.io/rexer/articles/rexer.html","id":"object-creation","dir":"Articles","previous_headings":"Exercises and exams definition process","what":"Object creation","title":"rexer: Random Exercises and Exams Generator","text":"process creating exam object using one templates provided package demonstrated . template, generate multiple instances exam. can specify instances generate two ways: indicating vector examinee names (using examinees parameter) specifying number instances generate (using instances_num parameter). indicated, examinee names take precedence. example, stated want generate 30 instances exam. can generate instances either randomly sequentially, depending instance number generate. controlled random parameter. example indicates generation performed based generated instance number. Additionally, test, can include exercises order defined random order. indicated reorder_exercises parameter. Finally, using select_n_exercises parameter, can specify number exercises include test. available exercises, quantity specified parameter randomly selected. default, defined exercises included. example, exercises provided exam, 5 selected randomly rearranged.","code":"library(rexer)  rmd <- system.file(\"extdata/template01.Rmd\", package = \"rexer\")  ex <- exam(   rmd = rmd,   instances_num = 30,   random = FALSE,   reorder_exercises = TRUE,   select_n_exercises = 5 )"},{"path":"https://josesamos.github.io/rexer/articles/rexer.html","id":"exercise-definition","dir":"Articles","previous_headings":"Exercises and exams definition process","what":"Exercise definition","title":"rexer: Random Exercises and Exams Generator","text":"can define exercises one one function define_an_exercise(), alternatively, bulk manner using functions define_exercises() (data frame), define_exercises_from_csv(), define_exercises_from_excel(). definition functions can conveniently combined. following example, define exercise whose random component presented image. Since image included package, need retrieve folder using system.file() function. images local folder, sufficient specify name. random component example defined gap identified “[[1]].” can define many random components necessary statement, image, image_alt fields simply incrementing number gap mark. random component, must specify options consider using additional parameters, necessarily need names can indicated prevent errors. case, parameter a_1, specify vector file names images available package. ‘answer’ parameter, can include information obtain correct response, , case, vector whose options correspond one--one options defined random component, indicated response associated selected option random component. Finally, using first parameter, type, assigning value “p”, indicate whether consider exercise start new page. time exam generation, able change option. now incorporating additional exercises exam, based definition provided CSV file. content CSV file displayed . table containing exercises shown . exercise represented row table. depict options filling gaps, employ vector options, , stored single field, represented string using separator vector elements: “<|>”. define exercises spreadsheet, need manually insert separator different options. data frame used, can utilize function vector_to_string() support, , given vector, transforms string inserting separators components. mentioned earlier, random components examples defined gaps identified “[[n]]” n increases within exercise. multiple gaps exercise, can specify randomly reordered including markers “{{}},” seen various examples table. use element, answer remain , order appearance corresponding options may change. sole purpose element make challenging examinee identify identical exercises exam another person. package provides functions creating data frame (create_exercise_data_frame()), well empty CSV Excel files (create_exercise_csv() create_exercise_excel()) exercises can added either programmatically directly editing . also includes functions read structures data frame able modify later deemed necessary (read_exercise_csv() read_exercise_excel()), also save exercises CSV format (write_exercise_csv()).","code":"ex <- ex |>   define_an_exercise(     type = 'p',     statement = 'What is the three-letter country code (ISO 3166-1 alpha-3) for     the country represented in the figure below?',     image = paste0(system.file('extdata/figures', package = 'rexer'), '/', '[[1]]'),     image_alt = 'Country outline.',     answer = c('ESP', 'CHL', 'NZL', 'ITA'),     a_1 = c('spain.png', 'chile.png', 'new_zealand.png', 'italy.png')   ) example <- system.file(\"extdata/example.csv\", package = \"rexer\")  ex <- ex |>   define_exercises_from_csv(example) \"type\",\"statement\",\"image\",\"image_alt\",\"answer\",\"a_1\",\"a_2\",\"a_3\" \"\",\"What is the three-letter country code (ISO 3166-1 alpha-3) for [[1]]?\",\"\",\"\",\"LTU<|>URY<|>MEX<|>GAB\",\"Lithuania<|>Uruguay<|>Mexico<|>Gabon\",\"\",\"\" \"\",\"What is the three-letter country code (ISO 3166-1 alpha-3) for [[1]]?\",\"\",\"\",\"?\",\"Lithuania<|>Uruguay<|>Mexico<|>Gabon\",\"\",\"\" \"\",\"What are the three-letter country code (ISO 3166-1 alpha-3) for [[1]] and [[2]]?\",\"\",\"\",\"LTU and DMA<|>URY and MLI<|>MEX and BFA<|>GAB and BDI\",\"Lithuania<|>Uruguay<|>Mexico<|>Gabon\",\"Dominica<|>Mali<|>Burkina Faso<|>Burundi\",\"\" \"\",\"What are the three-letter country code (ISO 3166-1 alpha-3) for {{[[1]], [[2]] and [[3]]}}?\",\"\",\"\",\"1.LTU, 2.DMA, 3.VCT<|>1.URY, 2.MLI, 3.PRY<|>1.MEX, 2.BFA, 3.BLZ<|>1.GAB, 2.BDI, 3.KGZ\",\"Lithuania<|>Uruguay<|>Mexico<|>Gabon\",\"Dominica<|>Mali<|>Burkina Faso<|>Burundi\",\"St. Vincent & Grenadines<|>Paraguay<|>Belize<|>Kyrgyzstan\" \"\",\"What are the three-letter country code (ISO 3166-1 alpha-3) for {{[[1]], [[2]] and [[3]]}}?\",\"\",\"\",\"?\",\"Lithuania<|>Uruguay<|>Mexico<|>Gabon\",\"Dominica<|>Mali<|>Burkina Faso<|>Burundi\",\"St. Vincent & Grenadines<|>Paraguay<|>Belize<|>Kyrgyzstan\" \"\",\"What are the three-letter country code (ISO 3166-1 alpha-3) for {{[[1]], [[2]] and [[3]]}}?\",\"\",\"\",\"?\",\"Lithuania<|>Uruguay<|>Mexico<|>Gabon\",\"Dominica<|>Mali<|>Burkina Faso\",\"St. Vincent & Grenadines<|>Paraguay\" df <- read_exercise_csv(example) pander::pandoc.table(df, split.table = Inf)"},{"path":"https://josesamos.github.io/rexer/articles/rexer.html","id":"definition-of-answers-in-exercises","dir":"Articles","previous_headings":"Exercises and exams definition process > Exercise definition","what":"Definition of answers in exercises","title":"rexer: Random Exercises and Exams Generator","text":"look first, second, fourth fifth exercises table, can see contain gaps, options consider defined. Regarding answers, formed corresponding options gaps order: first option gaps, second gaps, . words, answer vector, correspondence vectors fill gaps, vectors used order indicated answer (first element gaps, second element gaps, etc.). However, answer single element (can empty), combination available options fill gaps can considered randomly. make easier define answers, can use set_pending_answers() function. indicated ‘?’ character answer column data frame, generates answer considering options gaps order described paragraph . Thus, adapt answer combination specified options. table shows result obtained previous table applying function. last row table, can observe , since gaps different number options, considers one highest number options rotates others generate answer combining . can store result CSV file (write_exercise_csv()) facilitate elaboration answers, given options one.","code":"df <- set_pending_answers(df) pander::pandoc.table(df, split.table = Inf)"},{"path":"https://josesamos.github.io/rexer/articles/rexer.html","id":"template-definition","dir":"Articles","previous_headings":"Exercises and exams definition process","what":"Template definition","title":"rexer: Random Exercises and Exams Generator","text":"Rmd file containing exam template required instantiate exam object. Communication object template occurs parameters must included template. values parameters set within object using associated definition methods. parameters default values specified templates included package. parameters exam_number exam_number_str take value generated exam instance number. Parameter examinee contains examinee’s name, specified, value parameter exam_number_str vector examinees indicated. necessary include value parameters exam establish connection exam given examinee version answers instructions correction included. Parameter exercises contains vector statements generated exercises, allowing us iterate present exercise according convenience, shown example . Finally, parameter all_exercises contains statements exercises presented together; alternative presenting exercises using parameter exercises. usage demonstrated following example. templates template01.Rmd template01.Rmd included package, can see examples parameter usage.","code":"params:   exam_number: 1   exam_number_str: \"01\"   examinee: \"01\"   exercises: \"\"   all_exercises: \"\" --- ``{r, echo=FALSE, results='asis'} for (i in seq_along(params$exercises)) {   q <- paste0('**1.** ', params$exercises[i])   cat(q) } `` `r params$all_exercises`"},{"path":"https://josesamos.github.io/rexer/articles/rexer.html","id":"generation-of-the-exam-instances","dir":"Articles","previous_headings":"","what":"Generation of the exam instances","title":"rexer: Random Exercises and Exams Generator","text":"defined configured exam exercises may contain, can generate instances distribute students correction support instances using generate_document() generate_correction_document() functions. functions, can specify folder generate instances (parameter out_dir) want change page layout indicated exercise (parameter new_pages): can specify exercise placed new page (value ‘’) page changes complete (value ‘none’). Using output_format parameter, can specify output document format (default PDF). case, generated temporary folder, must indicate different folders corresponding files name. result second generated exam versions included package, files 02.pdf 02c.pdf. beginning documents. document facilitate correction, can see gaps marked numbered. first exercise, order gaps changed, indicated exercise definition, answers can identified gap number used .  examples, can see instance number included upper-right corner. number allows us relate correction purposes.","code":"ex <- ex |>   generate_document(out_dir = tempdir(), new_pages = 'all') |>   generate_correction_document(out_dir = tempdir(), new_pages = 'none')"},{"path":"https://josesamos.github.io/rexer/articles/rexer.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"rexer: Random Exercises and Exams Generator","text":"rexer package, can generate exams exercises based text images, incorporating random elements. exercises defined table can edited spreadsheet generated using R. Multiple options can defined gap exercise statement, also flexibility randomly reorder gaps desired. Exercises included exam can also selected randomly. functionalities aim generate exams similar difficulty different, reducing likelihood cheating among examinees. Additionally, can generate correction-friendly version may include answers specified. case, limit randomness based number answers included exercise definition.","code":""},{"path":"https://josesamos.github.io/rexer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jose Samos. Author, maintainer. Universidad de Granada. Copyright holder.","code":""},{"path":"https://josesamos.github.io/rexer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Samos J (2024). rexer: Random Exercises Exams Generator. R package version 1.0.0,  https://github.com/josesamos/rexer, https://josesamos.github.io/rexer/.","code":"@Manual{,   title = {rexer: Random Exercises and Exams Generator},   author = {Jose Samos},   year = {2024},   note = {R package version 1.0.0,  https://github.com/josesamos/rexer},   url = {https://josesamos.github.io/rexer/}, }"},{"path":"https://josesamos.github.io/rexer/index.html","id":"rexer-","dir":"","previous_headings":"","what":"Random Exercises and Exams Generator","title":"Random Exercises and Exams Generator","text":"goal rexer facilitate generation exams incorporating random elements exercises. generalization string exercises found exams package, enabling definition exercises within table inclusion random components within specified gaps without need include R code. Incorporating randomness within exercise enhances exam security, ensuring student compelled focus test rather attempting obtain answers peers. Documents can generated PDF, HTML, Word format. produces version conducting assessment version facilitates correction, linked code.","code":""},{"path":"https://josesamos.github.io/rexer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Random Exercises and Exams Generator","text":"can install released version rexer CRAN : development version GitHub :","code":"install.packages(\"rexer\") devtools::install_github(\"josesamos/rexer\")"},{"path":"https://josesamos.github.io/rexer/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Random Exercises and Exams Generator","text":"basic example shows generate 10 exam instances students take another 10 correction, using exercises included CSV file: exam generated Rmd format template, includes selected exercises defined random components. content exercise file displayed . gaps exercises numbered (e.g., “[[1]]”) filled associated elements defined vector form. also possible define elements appear random order (e.g., “{{[[1]], [[2]], [[3]]}}”), instantiated version, gaps can appear order. exercise, can many gaps desired, number options want gap. Figures can included exercises simply indicating file name caption text. Figures included exercise can also selected like element gap vector options defined. Among exam generation options, can choose generate randomly based generated instance number, exams repeat cycle according number elements defined fill gaps. case, correction, assistance version filled gaps highlighted, along instructions answer defined available option. Next, example generated exam correction support provided.","code":"library(rexer)  rmd <- system.file(\"extdata/template01.Rmd\", package = \"rexer\") exercises <- system.file(\"extdata/exercises.csv\", package = \"rexer\") ex <- exam(   rmd = rmd,   examinees = NULL,   instances_num = 10,   random = TRUE,   reorder_exercises = TRUE ) |>   define_exercises_from_csv(exercises) |>   generate_document(out_dir = tempdir(), new_pages = 'all') |>   generate_correction_document(out_dir = tempdir(), new_pages = 'none') \"type\",\"statement\",\"image\",\"image_alt\",\"answer\",\"a_1\",\"a_2\",\"a_3\" \"\",\"What is the three-letter country code (ISO 3166-1 alpha-3) for [[1]]?\",\"\",\"\",\"LTU<|>URY<|>MEX<|>GAB\",\"Lithuania<|>Uruguay<|>Mexico<|>Gabon\",\"\",\"\" \"\",\"What are the three-letter country code (ISO 3166-1 alpha-3) for [[1]] and [[2]]?\",\"\",\"\",\"LTU and DMA<|>URY and MLI<|>MEX and BFA<|>GAB and BDI\",\"Lithuania<|>Uruguay<|>Mexico<|>Gabon\",\"Dominica<|>Mali<|>Burkina Faso<|>Burundi\",\"\" \"\",\"What are the three-letter country code (ISO 3166-1 alpha-3) for {{[[1]], [[2]] and [[3]]}}?\",\"\",\"\",\"1.LTU, 2.DMA, 3.VCT<|>1.URY, 2.MLI, 3.PRY<|>1.MEX, 2.BFA, 3.BLZ<|>1.GAB, 2.BDI, 3.KGZ\",\"Lithuania<|>Uruguay<|>Mexico<|>Gabon\",\"Dominica<|>Mali<|>Burkina Faso<|>Burundi\",\"St. Vincent & Grenadines<|>Paraguay<|>Belize<|>Kyrgyzstan\" \"p\",\"What are the three-letter country code (ISO 3166-1 alpha-3) for [[1]] and for the country represented in the figure below?\",\"xxxxx/[[2]]\",\"Country outline.\",\"LTU and GRC<|>URY and GBR<|>MEX and JPN<|>GAB and BRA\",\"Lithuania<|>Uruguay<|>Mexico<|>Gabon\",\"greece.png<|>united_kingdom.png<|>japan.png<|>brazil.png\","},{"path":"https://josesamos.github.io/rexer/reference/create_exercise_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an exercise csv file — create_exercise_csv","title":"Create an exercise csv file — create_exercise_csv","text":"Creates empty exercise csv file.","code":""},{"path":"https://josesamos.github.io/rexer/reference/create_exercise_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an exercise csv file — create_exercise_csv","text":"","code":"create_exercise_csv(file, sep = \",\")"},{"path":"https://josesamos.github.io/rexer/reference/create_exercise_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an exercise csv file — create_exercise_csv","text":"file string, name text file. sep Column separator character.","code":""},{"path":"https://josesamos.github.io/rexer/reference/create_exercise_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an exercise csv file — create_exercise_csv","text":"string.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rexer/reference/create_exercise_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an exercise csv file — create_exercise_csv","text":"","code":"file <- create_exercise_csv(file = tempfile(fileext = '.csv'))"},{"path":"https://josesamos.github.io/rexer/reference/create_exercise_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an exercise data frame — create_exercise_data_frame","title":"Create an exercise data frame — create_exercise_data_frame","text":"Creates empty exercise data frame.","code":""},{"path":"https://josesamos.github.io/rexer/reference/create_exercise_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an exercise data frame — create_exercise_data_frame","text":"","code":"create_exercise_data_frame()"},{"path":"https://josesamos.github.io/rexer/reference/create_exercise_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an exercise data frame — create_exercise_data_frame","text":"data frame.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rexer/reference/create_exercise_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an exercise data frame — create_exercise_data_frame","text":"","code":"df <- create_exercise_data_frame()"},{"path":"https://josesamos.github.io/rexer/reference/create_exercise_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an exercise Excel file — create_exercise_excel","title":"Create an exercise Excel file — create_exercise_excel","text":"Creates empty exercise Excel file.","code":""},{"path":"https://josesamos.github.io/rexer/reference/create_exercise_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an exercise Excel file — create_exercise_excel","text":"","code":"create_exercise_excel(file)"},{"path":"https://josesamos.github.io/rexer/reference/create_exercise_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an exercise Excel file — create_exercise_excel","text":"file string, name text file.","code":""},{"path":"https://josesamos.github.io/rexer/reference/create_exercise_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an exercise Excel file — create_exercise_excel","text":"string.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rexer/reference/create_exercise_excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an exercise Excel file — create_exercise_excel","text":"","code":"# \\donttest{ file <- create_exercise_excel(file = tempfile(fileext = '.xlsx')) # }"},{"path":"https://josesamos.github.io/rexer/reference/define_an_exercise.html","id":null,"dir":"Reference","previous_headings":"","what":"Define an exercise — define_an_exercise","title":"Define an exercise — define_an_exercise","text":"Defines exercise random components.","code":""},{"path":"https://josesamos.github.io/rexer/reference/define_an_exercise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define an exercise — define_an_exercise","text":"","code":"define_an_exercise(ex, type, statement, image, image_alt, answer, ...)  # S3 method for exam define_an_exercise(   ex,   type = \"\",   statement = \"\",   image = \"\",   image_alt = \"\",   answer = \"\",   ... )"},{"path":"https://josesamos.github.io/rexer/reference/define_an_exercise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define an exercise — define_an_exercise","text":"ex `exam` object. type character, 'p' indicates whether exercise starts new page. statement string, statement exercise. image string, optional, image file include exercise. image_alt string, description image include exercise. answer string, correct answer exercise. ... string, options gaps exercise.","code":""},{"path":"https://josesamos.github.io/rexer/reference/define_an_exercise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define an exercise — define_an_exercise","text":"`exam`.","code":""},{"path":"https://josesamos.github.io/rexer/reference/define_an_exercise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define an exercise — define_an_exercise","text":"image included exercise, text `image_alt` field associated must also included. Following answer, options can defined fill gaps specified exercise. answer options formed vector strings, one chosen formulate exercise select answer. represent vector strings cell, function `vector_to_string()` used, includes separator (\"<|>\") vector elements generate string.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rexer/reference/define_an_exercise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define an exercise — define_an_exercise","text":"","code":"rmd <- system.file(\"extdata/template01.Rmd\", package = \"rexer\") ex <- exam(   rmd = rmd,   examinees = NULL,   instances_num = 10,   random = TRUE,   reorder_exercises = TRUE,   select_n_exercises = NULL ) |>   define_an_exercise(     type = 'p',     statement = 'What is the three-letter country code (ISO 3166-1 alpha-3) for     the country represented in the figure below?',     image = paste0(system.file(\"extdata/figures\", package = \"rexer\"), \"/\", '[[1]]'),     image_alt = 'Country outline.',     answer = c('ESP', 'CHL', 'NZL', 'ITA'),     c('spain.png', 'chile.png', 'new_zealand.png', 'italy.png')   )"},{"path":"https://josesamos.github.io/rexer/reference/define_exercises.html","id":null,"dir":"Reference","previous_headings":"","what":"Define exercises from a data frame — define_exercises","title":"Define exercises from a data frame — define_exercises","text":"row text data frame interpreted exercise. need define columns going use; rest columns taken default.","code":""},{"path":"https://josesamos.github.io/rexer/reference/define_exercises.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define exercises from a data frame — define_exercises","text":"","code":"define_exercises(ex, df)  # S3 method for exam define_exercises(ex, df)"},{"path":"https://josesamos.github.io/rexer/reference/define_exercises.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define exercises from a data frame — define_exercises","text":"ex `exam` object. df data frame containing exercises.","code":""},{"path":"https://josesamos.github.io/rexer/reference/define_exercises.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define exercises from a data frame — define_exercises","text":"`exam`.","code":""},{"path":"https://josesamos.github.io/rexer/reference/define_exercises.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define exercises from a data frame — define_exercises","text":"answer options formed vector strings, one chosen formulate exercise select answer. represent vector strings cell, function `vector_to_string()` used, includes separator (\"<|>\") vector elements generate string.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rexer/reference/define_exercises.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define exercises from a data frame — define_exercises","text":"","code":"rmd <- system.file(\"extdata/template01.Rmd\", package = \"rexer\") exercises <- system.file(\"extdata/exercises.csv\", package = \"rexer\") q <- read_exercise_csv(exercises) ex <- exam(   rmd = rmd,   examinees = NULL,   instances_num = 10,   random = TRUE,   reorder_exercises = TRUE,   select_n_exercises = NULL ) |>   define_exercises(q)"},{"path":"https://josesamos.github.io/rexer/reference/define_exercises_from_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Define exercises from a csv file — define_exercises_from_csv","title":"Define exercises from a csv file — define_exercises_from_csv","text":"row text file interpreted exercise. need define columns going use; rest columns taken default.","code":""},{"path":"https://josesamos.github.io/rexer/reference/define_exercises_from_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define exercises from a csv file — define_exercises_from_csv","text":"","code":"define_exercises_from_csv(ex, file, sep)  # S3 method for exam define_exercises_from_csv(ex, file, sep = \",\")"},{"path":"https://josesamos.github.io/rexer/reference/define_exercises_from_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define exercises from a csv file — define_exercises_from_csv","text":"ex `exam` object. file string, name text file. sep Column separator character (\",\" \";\").","code":""},{"path":"https://josesamos.github.io/rexer/reference/define_exercises_from_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define exercises from a csv file — define_exercises_from_csv","text":"`exam`.","code":""},{"path":"https://josesamos.github.io/rexer/reference/define_exercises_from_csv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define exercises from a csv file — define_exercises_from_csv","text":"answer options formed vector strings, one chosen formulate exercise select answer. represent vector strings cell, function `vector_to_string()` used, includes separator (\"<|>\") vector elements generate string.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rexer/reference/define_exercises_from_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define exercises from a csv file — define_exercises_from_csv","text":"","code":"rmd <- system.file(\"extdata/template01.Rmd\", package = \"rexer\") exercises <- system.file(\"extdata/exercises.csv\", package = \"rexer\") ex <- exam(   rmd = rmd,   examinees = NULL,   instances_num = 10,   random = TRUE,   reorder_exercises = TRUE,   select_n_exercises = NULL ) |>   define_exercises_from_csv(exercises)"},{"path":"https://josesamos.github.io/rexer/reference/define_exercises_from_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Define exercises from a Excel file — define_exercises_from_excel","title":"Define exercises from a Excel file — define_exercises_from_excel","text":"row Excel file interpreted exercise. need define columns going use; rest columns taken default.","code":""},{"path":"https://josesamos.github.io/rexer/reference/define_exercises_from_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define exercises from a Excel file — define_exercises_from_excel","text":"","code":"define_exercises_from_excel(ex, file, sheet_index, sheet_name)  # S3 method for exam define_exercises_from_excel(ex, file, sheet_index = NULL, sheet_name = NULL)"},{"path":"https://josesamos.github.io/rexer/reference/define_exercises_from_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define exercises from a Excel file — define_exercises_from_excel","text":"ex `exam` object. file string, name Excel file. sheet_index number, sheet index workbook. sheet_name string, sheet name.","code":""},{"path":"https://josesamos.github.io/rexer/reference/define_exercises_from_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define exercises from a Excel file — define_exercises_from_excel","text":"`exam`.","code":""},{"path":"https://josesamos.github.io/rexer/reference/define_exercises_from_excel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define exercises from a Excel file — define_exercises_from_excel","text":"addition file, can indicate sheet name index. indicate anything, considers first sheet. answer options formed vector strings, one chosen formulate exercise select answer. represent vector strings cell, function `vector_to_string()` used, includes separator (\"<|>\") vector elements generate string.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rexer/reference/define_exercises_from_excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define exercises from a Excel file — define_exercises_from_excel","text":"","code":"rmd <- system.file(\"extdata/template01.Rmd\", package = \"rexer\") exercises <- system.file(\"extdata/exercises.xlsx\", package = \"rexer\") ex <- exam(   rmd = rmd,   examinees = NULL,   instances_num = 10,   random = TRUE,   reorder_exercises = TRUE,   select_n_exercises = NULL ) |>   define_exercises_from_excel(exercises)"},{"path":"https://josesamos.github.io/rexer/reference/exam.html","id":null,"dir":"Reference","previous_headings":"","what":"`exam` S3 class — exam","title":"`exam` S3 class — exam","text":"Creates `exam` object.","code":""},{"path":"https://josesamos.github.io/rexer/reference/exam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"`exam` S3 class — exam","text":"","code":"exam(   rmd = NULL,   examinees = NULL,   instances_num = 1,   random = TRUE,   reorder_exercises = TRUE,   select_n_exercises = NULL )"},{"path":"https://josesamos.github.io/rexer/reference/exam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"`exam` S3 class — exam","text":"rmd string representing path Rmd file, exam template. examinees vector strings, representing names instances generate. instances_num integer, representing number instances generate examinee names provided. random boolean, indicating whether generate instances randomly sequentially. reorder_exercises boolean, indicating whether reorder exercises exam. select_n_exercises integer, representing number exercises include.","code":""},{"path":"https://josesamos.github.io/rexer/reference/exam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"`exam` S3 class — exam","text":"`exam` object.","code":""},{"path":"https://josesamos.github.io/rexer/reference/exam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"`exam` S3 class — exam","text":"test based Rmd template predefined parameters whose values filled using functions object. `rmd` parameter, specify template file. template, generate multiple instances exam. can specify instances generate two ways: indicating vector examinee names (using `examinees` parameter) specifying number instances generate (using `instances_num` parameter). indicated, examinee names take precedence. can generate instances either randomly sequentially, depending instance number generate. controlled `random` parameter. Additionally, test, can include exercises order defined random order. indicated `reorder_exercises` parameter. Finally, using `select_n_exercises` parameter, can specify number exercises include test. available exercises, quantity specified parameter randomly selected. default, defined exercises included.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rexer/reference/exam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"`exam` S3 class — exam","text":"","code":"rmd <- system.file(\"extdata/template01.Rmd\", package = \"rexer\") ex <- exam(   rmd = rmd,   examinees = NULL,   instances_num = 10,   random = TRUE,   reorder_exercises = TRUE,   select_n_exercises = NULL )"},{"path":"https://josesamos.github.io/rexer/reference/generate_correction_document.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the support document for exam correction — generate_correction_document","title":"Generate the support document for exam correction — generate_correction_document","text":"exam object, can generate instances serve support correction exam. instance include answers, indicated, associated exercises. case, randomly included part exam highlighted.","code":""},{"path":"https://josesamos.github.io/rexer/reference/generate_correction_document.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the support document for exam correction — generate_correction_document","text":"","code":"generate_correction_document(ex, out_dir, output_format, encoding, new_pages)  # S3 method for exam generate_correction_document(   ex,   out_dir = NULL,   output_format = \"pdf_document\",   encoding = \"UTF-8\",   new_pages = NULL )"},{"path":"https://josesamos.github.io/rexer/reference/generate_correction_document.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the support document for exam correction — generate_correction_document","text":"ex `exam` object. out_dir string indicating output folder. output_format vector strings specifying desired output formats. encoding string specifying encoding. new_pages string values '', 'none', 'NULL'.","code":""},{"path":"https://josesamos.github.io/rexer/reference/generate_correction_document.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the support document for exam correction — generate_correction_document","text":"`exam` object.","code":""},{"path":"https://josesamos.github.io/rexer/reference/generate_correction_document.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate the support document for exam correction — generate_correction_document","text":", specify folder documents generated (using parameter `out_dir`), output format (using parameter `output_format`), encoding (using parameter `encoding`), whether want exercise start new page, include exercises pages filled, preserve definition exercise regard (using parameter `new_pages`).","code":""},{"path":[]},{"path":"https://josesamos.github.io/rexer/reference/generate_correction_document.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the support document for exam correction — generate_correction_document","text":"","code":"if (FALSE) { rmd <- system.file(\"extdata/template01.Rmd\", package = \"rexer\") exercises <- system.file(\"extdata/exercises.csv\", package = \"rexer\") ex <- exam(   rmd = rmd,   examinees = NULL,   instances_num = 1,   random = TRUE,   reorder_exercises = TRUE ) |>   define_exercises_from_csv(exercises) |>   generate_correction_document(out_dir = tempdir()) }"},{"path":"https://josesamos.github.io/rexer/reference/generate_document.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the exam document — generate_document","title":"Generate the exam document — generate_document","text":"exam object, generate different instances exam deliver individuals examined. , need specify folder generated (using parameter `out_dir`), output format (using parameter `output_format`), encoding (using parameter `encoding`), whether want exercise start new page, include exercises pages filled, preserve definition exercise regard (using parameter `new_pages` values '', 'none', NULL).","code":""},{"path":"https://josesamos.github.io/rexer/reference/generate_document.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the exam document — generate_document","text":"","code":"generate_document(ex, out_dir, output_format, encoding, new_pages)  # S3 method for exam generate_document(   ex,   out_dir = NULL,   output_format = \"pdf_document\",   encoding = \"UTF-8\",   new_pages = NULL )"},{"path":"https://josesamos.github.io/rexer/reference/generate_document.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the exam document — generate_document","text":"ex `exam` object. out_dir string indicating output folder. output_format vector strings specifying desired output formats. encoding string specifying encoding. new_pages string values '', 'none', NULL.","code":""},{"path":"https://josesamos.github.io/rexer/reference/generate_document.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the exam document — generate_document","text":"`exam` object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rexer/reference/generate_document.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the exam document — generate_document","text":"","code":"if (FALSE) { rmd <- system.file(\"extdata/template01.Rmd\", package = \"rexer\") exercises <- system.file(\"extdata/exercises.csv\", package = \"rexer\") ex <- exam(   rmd = rmd,   examinees = NULL,   instances_num = 1,   random = TRUE,   reorder_exercises = TRUE ) |>   define_exercises_from_csv(exercises) |>   generate_document(out_dir = tempdir(), new_pages = 'all') }"},{"path":"https://josesamos.github.io/rexer/reference/interpret_all_exercises.html","id":null,"dir":"Reference","previous_headings":"","what":"interpret all exercise — interpret_all_exercises","title":"interpret all exercise — interpret_all_exercises","text":"interpret exercise","code":""},{"path":"https://josesamos.github.io/rexer/reference/interpret_all_exercises.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"interpret all exercise — interpret_all_exercises","text":"","code":"interpret_all_exercises(exercises, exam_number, random, reorder, delivery)"},{"path":"https://josesamos.github.io/rexer/reference/interpret_all_exercises.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"interpret all exercise — interpret_all_exercises","text":"exercises data frame, exercises. exam_number integer, exam sequence number random boolean, random generation. reorder boolean, reorder exercises. delivery boolean, delivery version.","code":""},{"path":"https://josesamos.github.io/rexer/reference/interpret_all_exercises.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"interpret all exercise — interpret_all_exercises","text":"string.","code":""},{"path":"https://josesamos.github.io/rexer/reference/interpret_an_exercise.html","id":null,"dir":"Reference","previous_headings":"","what":"interpret a exercise. — interpret_an_exercise","title":"interpret a exercise. — interpret_an_exercise","text":"interpret exercise.","code":""},{"path":"https://josesamos.github.io/rexer/reference/interpret_an_exercise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"interpret a exercise. — interpret_an_exercise","text":"","code":"interpret_an_exercise(exercise, exam_number, random, delivery)"},{"path":"https://josesamos.github.io/rexer/reference/interpret_an_exercise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"interpret a exercise. — interpret_an_exercise","text":"exercise data frame, exercise. exam_number integer, exam sequence number random boolean, random generation. delivery boolean, delivery version.","code":""},{"path":"https://josesamos.github.io/rexer/reference/interpret_an_exercise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"interpret a exercise. — interpret_an_exercise","text":"string.","code":""},{"path":"https://josesamos.github.io/rexer/reference/interpret_exercises.html","id":null,"dir":"Reference","previous_headings":"","what":"interpret exercises — interpret_exercises","title":"interpret exercises — interpret_exercises","text":"interpret exercises","code":""},{"path":"https://josesamos.github.io/rexer/reference/interpret_exercises.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"interpret exercises — interpret_exercises","text":"","code":"interpret_exercises(exercises, exam_number, random, reorder, delivery)"},{"path":"https://josesamos.github.io/rexer/reference/interpret_exercises.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"interpret exercises — interpret_exercises","text":"exercises data frame, exercises. exam_number integer, exam sequence number random boolean, random generation. reorder boolean, reorder exercises. delivery boolean, delivery version.","code":""},{"path":"https://josesamos.github.io/rexer/reference/interpret_exercises.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"interpret exercises — interpret_exercises","text":"string vector.","code":""},{"path":"https://josesamos.github.io/rexer/reference/name_with_nexus.html","id":null,"dir":"Reference","previous_headings":"","what":"Name with nexus — name_with_nexus","title":"Name with nexus — name_with_nexus","text":"Given name, ends \"/\" nexus empty string, otherwise \"/\". Add nexus.","code":""},{"path":"https://josesamos.github.io/rexer/reference/name_with_nexus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name with nexus — name_with_nexus","text":"","code":"name_with_nexus(name)"},{"path":"https://josesamos.github.io/rexer/reference/name_with_nexus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name with nexus — name_with_nexus","text":"name string.","code":""},{"path":"https://josesamos.github.io/rexer/reference/name_with_nexus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Name with nexus — name_with_nexus","text":"string.","code":""},{"path":"https://josesamos.github.io/rexer/reference/num_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"generates a vector of numbers in string format, for the  interval. — num_vector","title":"generates a vector of numbers in string format, for the  interval. — num_vector","text":"generates vector numbers string format,  interval.","code":""},{"path":"https://josesamos.github.io/rexer/reference/num_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generates a vector of numbers in string format, for the  interval. — num_vector","text":"","code":"num_vector(start = 1, end)"},{"path":"https://josesamos.github.io/rexer/reference/num_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generates a vector of numbers in string format, for the  interval. — num_vector","text":"start integer, start interval. end integer, end interval.","code":""},{"path":"https://josesamos.github.io/rexer/reference/num_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generates a vector of numbers in string format, for the  interval. — num_vector","text":"vector strings.","code":""},{"path":"https://josesamos.github.io/rexer/reference/read_exercise_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an exercise csv file — read_exercise_csv","title":"Read an exercise csv file — read_exercise_csv","text":"Reads csv file exercises returns data frame.","code":""},{"path":"https://josesamos.github.io/rexer/reference/read_exercise_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an exercise csv file — read_exercise_csv","text":"","code":"read_exercise_csv(file, sep = \",\")"},{"path":"https://josesamos.github.io/rexer/reference/read_exercise_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an exercise csv file — read_exercise_csv","text":"file string, name text file. sep Column separator character.","code":""},{"path":"https://josesamos.github.io/rexer/reference/read_exercise_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an exercise csv file — read_exercise_csv","text":"data frame.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rexer/reference/read_exercise_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read an exercise csv file — read_exercise_csv","text":"","code":"file <- system.file(\"extdata/exercises.csv\", package = \"rexer\") df <- read_exercise_csv(file)"},{"path":"https://josesamos.github.io/rexer/reference/read_exercise_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an exercise Excel file — read_exercise_excel","title":"Read an exercise Excel file — read_exercise_excel","text":"Reads Excel file exercises returns data frame.","code":""},{"path":"https://josesamos.github.io/rexer/reference/read_exercise_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an exercise Excel file — read_exercise_excel","text":"","code":"read_exercise_excel(file, sheet_index = NULL, sheet_name = NULL)"},{"path":"https://josesamos.github.io/rexer/reference/read_exercise_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an exercise Excel file — read_exercise_excel","text":"file string, name text file. sheet_index number, sheet index workbook. sheet_name string, sheet name.","code":""},{"path":"https://josesamos.github.io/rexer/reference/read_exercise_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an exercise Excel file — read_exercise_excel","text":"data frame.","code":""},{"path":"https://josesamos.github.io/rexer/reference/read_exercise_excel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read an exercise Excel file — read_exercise_excel","text":"addition file, can indicate sheet name index. indicate anything, considers first sheet.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rexer/reference/read_exercise_excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read an exercise Excel file — read_exercise_excel","text":"","code":"file <- system.file(\"extdata/exercises.csv\", package = \"rexer\") df <- read_exercise_csv(file)"},{"path":"https://josesamos.github.io/rexer/reference/reduce_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"reduce vector by sep. — reduce_vector","title":"reduce vector by sep. — reduce_vector","text":"reduce vector sep.","code":""},{"path":"https://josesamos.github.io/rexer/reference/reduce_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reduce vector by sep. — reduce_vector","text":"","code":"reduce_vector(vector, sep = \"\\n\", italics = FALSE)"},{"path":"https://josesamos.github.io/rexer/reference/reduce_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reduce vector by sep. — reduce_vector","text":"vector vector strings. sep string, separator use. italics boolean.","code":""},{"path":"https://josesamos.github.io/rexer/reference/reduce_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"reduce vector by sep. — reduce_vector","text":"string.","code":""},{"path":"https://josesamos.github.io/rexer/reference/reorder_items.html","id":null,"dir":"Reference","previous_headings":"","what":"reorder items. — reorder_items","title":"reorder items. — reorder_items","text":"reorder items.","code":""},{"path":"https://josesamos.github.io/rexer/reference/reorder_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reorder items. — reorder_items","text":"","code":"reorder_items(txt)"},{"path":"https://josesamos.github.io/rexer/reference/reorder_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reorder items. — reorder_items","text":"txt string.","code":""},{"path":"https://josesamos.github.io/rexer/reference/reorder_items.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"reorder items. — reorder_items","text":"string.","code":""},{"path":"https://josesamos.github.io/rexer/reference/select_random.html","id":null,"dir":"Reference","previous_headings":"","what":"randomly selects the number of elements. If null, returns them all randomly reordered. — select_random","title":"randomly selects the number of elements. If null, returns them all randomly reordered. — select_random","text":"randomly selects number elements. null, returns randomly reordered.","code":""},{"path":"https://josesamos.github.io/rexer/reference/select_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"randomly selects the number of elements. If null, returns them all randomly reordered. — select_random","text":"","code":"select_random(vector, n = NULL)"},{"path":"https://josesamos.github.io/rexer/reference/select_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"randomly selects the number of elements. If null, returns them all randomly reordered. — select_random","text":"vector vector strings. n integer, number elements select.","code":""},{"path":"https://josesamos.github.io/rexer/reference/select_random.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"randomly selects the number of elements. If null, returns them all randomly reordered. — select_random","text":"vector strings.","code":""},{"path":"https://josesamos.github.io/rexer/reference/select_sequential.html","id":null,"dir":"Reference","previous_headings":"","what":"sequentially select an element, the one that corresponds according to the number\npassed as a parameter. — select_sequential","title":"sequentially select an element, the one that corresponds according to the number\npassed as a parameter. — select_sequential","text":"sequentially select element, one corresponds according number passed parameter.","code":""},{"path":"https://josesamos.github.io/rexer/reference/select_sequential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sequentially select an element, the one that corresponds according to the number\npassed as a parameter. — select_sequential","text":"","code":"select_sequential(vector, n = 0)"},{"path":"https://josesamos.github.io/rexer/reference/select_sequential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sequentially select an element, the one that corresponds according to the number\npassed as a parameter. — select_sequential","text":"vector vector strings. n integer, number sequence.","code":""},{"path":"https://josesamos.github.io/rexer/reference/select_sequential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sequentially select an element, the one that corresponds according to the number\npassed as a parameter. — select_sequential","text":"string.","code":""},{"path":"https://josesamos.github.io/rexer/reference/set_pending_answers.html","id":null,"dir":"Reference","previous_headings":"","what":"Set pending answers — set_pending_answers","title":"Set pending answers — set_pending_answers","text":"answers want process indicated character \"?\". Fill specified answers generating combinations available options fill gaps order, value 1 maximum number options available: first option gaps, second gaps, .","code":""},{"path":"https://josesamos.github.io/rexer/reference/set_pending_answers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set pending answers — set_pending_answers","text":"","code":"set_pending_answers(df)"},{"path":"https://josesamos.github.io/rexer/reference/set_pending_answers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set pending answers — set_pending_answers","text":"df data frame exercises.","code":""},{"path":"https://josesamos.github.io/rexer/reference/set_pending_answers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set pending answers — set_pending_answers","text":"data frame.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rexer/reference/set_pending_answers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set pending answers — set_pending_answers","text":"","code":"file <- system.file(\"extdata/example.csv\", package = \"rexer\") df <- read_exercise_csv(file) df <- set_pending_answers(df)"},{"path":"https://josesamos.github.io/rexer/reference/string_to_string_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Transforms string into a vector in string format. — string_to_string_vector","title":"Transforms string into a vector in string format. — string_to_string_vector","text":"Transforms string vector string format.","code":""},{"path":"https://josesamos.github.io/rexer/reference/string_to_string_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transforms string into a vector in string format. — string_to_string_vector","text":"","code":"string_to_string_vector(str)"},{"path":"https://josesamos.github.io/rexer/reference/string_to_string_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transforms string into a vector in string format. — string_to_string_vector","text":"str string.","code":""},{"path":"https://josesamos.github.io/rexer/reference/string_to_string_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transforms string into a vector in string format. — string_to_string_vector","text":"vector strings.","code":""},{"path":"https://josesamos.github.io/rexer/reference/string_to_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Transforms string into a vector of strings. — string_to_vector","title":"Transforms string into a vector of strings. — string_to_vector","text":"Transforms string vector strings.","code":""},{"path":"https://josesamos.github.io/rexer/reference/string_to_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transforms string into a vector of strings. — string_to_vector","text":"","code":"string_to_vector(str)"},{"path":"https://josesamos.github.io/rexer/reference/string_to_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transforms string into a vector of strings. — string_to_vector","text":"str string.","code":""},{"path":"https://josesamos.github.io/rexer/reference/string_to_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transforms string into a vector of strings. — string_to_vector","text":"vector strings.","code":""},{"path":"https://josesamos.github.io/rexer/reference/vector_to_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Transforms a vector of strings into a string — vector_to_string","title":"Transforms a vector of strings into a string — vector_to_string","text":"Insert separator (\"<|>\") later facilitate reverse operation.","code":""},{"path":"https://josesamos.github.io/rexer/reference/vector_to_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transforms a vector of strings into a string — vector_to_string","text":"","code":"vector_to_string(vector)"},{"path":"https://josesamos.github.io/rexer/reference/vector_to_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transforms a vector of strings into a string — vector_to_string","text":"vector vector strings.","code":""},{"path":"https://josesamos.github.io/rexer/reference/vector_to_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transforms a vector of strings into a string — vector_to_string","text":"string.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rexer/reference/vector_to_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transforms a vector of strings into a string — vector_to_string","text":"","code":"s <- vector_to_string(c('Addition', '+'))"},{"path":"https://josesamos.github.io/rexer/reference/write_exercise_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write an exercise csv file — write_exercise_csv","title":"Write an exercise csv file — write_exercise_csv","text":"Writes exercise data frame csv file exercises.","code":""},{"path":"https://josesamos.github.io/rexer/reference/write_exercise_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write an exercise csv file — write_exercise_csv","text":"","code":"write_exercise_csv(df, file, sep = \",\")"},{"path":"https://josesamos.github.io/rexer/reference/write_exercise_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write an exercise csv file — write_exercise_csv","text":"df data frame. file string, name text file. sep Column separator character.","code":""},{"path":"https://josesamos.github.io/rexer/reference/write_exercise_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write an exercise csv file — write_exercise_csv","text":"string.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rexer/reference/write_exercise_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write an exercise csv file — write_exercise_csv","text":"","code":"file <- system.file(\"extdata/example.csv\", package = \"rexer\") df <- read_exercise_csv(file) df <- set_pending_answers(df)  write_exercise_csv(df, file = tempfile(fileext = '.csv'))"},{"path":[]},{"path":"https://josesamos.github.io/rexer/news/index.html","id":"rexer-010","dir":"Changelog","previous_headings":"","what":"rexer 0.1.0","title":"rexer 0.1.0","text":"Initial CRAN submission.","code":""}]
